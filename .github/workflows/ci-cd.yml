name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - tester

permissions:
  contents: write
  security-events: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, mysqli
          tools: composer

      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist

      - name: Static Analysis with PHPStan (Level 1)
        run: vendor/bin/phpstan analyse --level=1 TugasCRUD

      - name: Run PHPUnit Tests
        run: vendor/bin/phpunit --configuration phpunit.xml

      - name: Lint PHP Files
        run: find TugasCRUD -type f -name "*.php" -exec php -l {} \;

      - name: Validate Composer Dependencies
        run: composer audit

  sast-advanced:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, mysqli
          tools: composer

      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist

      - name: Advanced Static Analysis with PHPStan (Level 5)
        run: vendor/bin/phpstan analyse --level=5 TugasCRUD

  deploy:
    needs: [build-and-test, sast-advanced]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/devsecops:latest .

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/devsecops:latest

      - name: Deploy Docker Container
        run: |
          docker run -d --name devsecops -p 8080:80 ${{ secrets.DOCKER_USERNAME }}/devsecops:latest

  dast-scan:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - name: Verify Application Accessibility
        run: curl http://localhost:8080

      - name: OWASP ZAP Full Scan
        uses: zaproxy/action-full-scan@v0.6.0
        with:
          target: 'http://localhost:8080'
          rules_file: '.zap/rules.tsv'
          fail_on_warn: true

      - name: Check ZAP Logs
        run: cat zap.log

